var m_request   = require('request');
var sprintf     = require('sprintf-js').sprintf;
var debugTrace  = require('debug')('iella:trace');

var Request = function() {
	this.data = new Object();
	this.response = null;
	this.secret = null;
	this.url = null;
};

Request.prototype.send = function(callback) {

	var _request = this;
	var requestData = {
		strictSSL: false,
		timeout: 60000,
		url: this.url,
	};

	debugTrace(this.url);
	var req = m_request.post(requestData, function(err, res, body) {
		try { _request.response = JSON.parse(body); } catch (err) { }
		if (typeof callback === 'function')
			callback(_request.response, err, res);
	});

	var form = req.form();
	if (this.secret !== undefined && this.secret !== null)
		form.append('iella-secret', this.secret);
	if (this.data !== undefined && this.data !== null)
		form.append('iella-in', JSON.stringify(this.data));

};

var Client = function() {
	this.secret = null;
	this.base = 'api/iella';
	this.host = null;
};

Client.prototype.setHost = function(host) {
	this.host = host;
};

Client.prototype.setBase = function(base) {
	this.host = host;
};

Client.prototype.setSecret = function(secret) {
	this.secret = secret;
};

Client.prototype.createRequest = function(method) {
	var request = new Request();
	request.secret = this.secret;
	request.url = this.buildURL(method);
	return request;
};

Client.prototype.buildURL = function(method) {
	var path = sprintf('%s/%s/%s', this.host, this.base, method);
	return sprintf('https://%s', path.replace(/\/\//g, '/'));
};

module.exports.Client = Client;
module.exports.Request = Request;